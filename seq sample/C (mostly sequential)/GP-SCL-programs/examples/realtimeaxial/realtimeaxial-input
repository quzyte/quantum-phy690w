# 
# GP-SCL codes are developed by:
# 
# Dusan Vudragovic, Ivana Vidanovic, Antun Balaz
# (Institute of Physics Belgrade, Serbia, http://www.scl.rs/)
# 
# Paulsamy Muruganandam
# (Bharathidasan University, Tamil Nadu, India)
# 
# Sadhan K. Adhikari
# (Sao Paulo State University, Brazil)
#    
# Public use and modification of this code are allowed provided that the
# following papers are cited:
# P. Muruganandam et al., Comput. Phys. Commun. 180 (2009) 1888;
# D. Vudragovic et al., Comput. Phys. Commun. 183 (2012) 2021.
# The authors would be grateful for all information and/or comments regarding
# the use of the code.
#

# Parameter input file for solving the time-dependent Gross–Pitaevskii 
# nonlinear partial differential equation in a trap using split-step
# Crank-Nicolson method.

# Type of rescaling of Gross–Pitaevskii equation.
# Possible values: 1, 2, and 3.
# Required: yes
# Type: int
  OPTION = 2

# Coefficient of the nonlinear term.
# Required: yes
# Type: double
  G0 = 18.81

# Coefficient that multiplies nonlinear term in non-stationary problem during
# final NRUN iterations.
# Required: yes 
# Type: double
  GPAR = 0.5

# Number of discretization points in the rho-direction.
# Required: yes
# Type: long
  NRHO = 130

# Number of discretization points in the z-direction.
# Required: yes
# Type: long
  NZ = 130

# Spatial discretization step in the rho-direction.
# Required: yes
# Type: double
  DRHO = 0.1

# Spatial discretization step in the z-direction.
# Required: yes
# Type: double
  DZ = 0.1

# Time discretization step.
# Required: yes
# Type: double
  DT = 0.001

# Kappa coefficient of anisotropy of the trap (omega_phi / omega_rho).
# Required: yes
# Type: double
  AL = 1.

# Lambda coefficient of anisotropy of the trap (omega_z / omega_rho).
# Required: yes
# Type: double
  BL = 4.

# Number of iterations to introduce the nonlinearity G0.
# Required: yes
# Type: long
  NSTP = 100000

# Number of subsequent iterations with fixed nonlinearity G0.
# Required: yes
# Type: long
  NPAS = 1000

# Number of final iterations with fixed nonlinearity G0.
# Required: yes
# Type: long
  NRUN = 20000

# Output file with the summary of final values of all physical quantities. If
# not defined, standard output will be used.
# Required: no
# Type: string
  OUTPUT = realtimeaxial-output

# Output file with the initial wave function. If not defined, the initial wave
# function will not be saved.
# Required: no
# Type: string
  INITOUT = realtimeaxial-initout

# Output file with the wave function obtained after the first NSTP iterations, 
# which introduce nonlinearity G0. If not defined, the wave function will not 
# be saved.
# Required: no
# Type: string
  NSTPOUT = realtimeaxial-nstpout

# Output file with the wave function obtained after the subsequent NPAS
# iterations, with the fixed nonlinearity G0. If not defined, the wave function
# Required: no
# Type: string
  NPASOUT = realtimeaxial-npasout
    
# Output file with the final wave function obtained after the final NRUN
# iterations. If not defined, the wave function will not be saved.
# Required: no
# Type: string
  NRUNOUT = realtimeaxial-nrunout

# Output file with the time dependence of RMS during the final NRUN
# iterations. If not defined, RMS values will not be saved.
# Required: no
# Type: string
  RMSOUT = realtimeaxial-rmsout

# Discretization step in the rho-direction used to save wave functions. Required
# if any of wave function output files (INITOUT, NPASOUT, NRUNOUT) is defined.
# Required: conditionally
# Type: long
  OUTSTPRHO = 10

# Discretization step in the z-direction used to save wave functions. Required
# if any of wave function output files (INITOUT, NPASOUT, NRUNOUT) is defined.
# Required: conditionally
# Type: long
  OUTSTPZ = 10

# Time discretization step used to save RMS of the wave function. Required if
# RMSOUT is defined.
# Required: conditionally
# Type: long
  OUTSTPT = 100
